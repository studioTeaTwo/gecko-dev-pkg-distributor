# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at http://mozilla.org/MPL/2.0/.

# Please write our copyright if you use this file.
# ¬© 2023 Floorp Projects & Contributors

#! SELF HOST DOES NOT SUPPORTED
#TODO: separate Publish to other workflow

name: "(A) ‚öí macOS Universal Build"
on:
  workflow_call:
    inputs:
      profgen:
        description: generate profile for PGO.
        type: boolean
        default: false
      #? if set this, use profdata, jarlog in build
      build-with-profdata-and-jarlog:
        description: build with profdata and jarlog
        type: boolean
        default: false
      out_artifact_name:
        type: string
        default: ""
      MOZ_BUILD_DATE:
        type: string
        default: ""
    secrets:
      # MACOS_CROSS_TOOLS_KEY:
      #   description: macOS cross tools 7z password
      #   required: true
      PAT:
        description: "Personal Access Token"
        required: true
  workflow_dispatch:
    inputs:
      profgen:
        description: generate profile for PGO.
        type: boolean
        default: false
      #? if set this, use profdata, jarlog in build
      build-with-profdata-and-jarlog:
        description: build with profdata and jarlog
        type: boolean
        default: false
      out_artifact_name:
        type: string
        default: ""
      MOZ_BUILD_DATE:
        type: string
        default: ""

jobs:
  mac-build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: ["macos-13", "macos-14"]
        # arch: [x86_64, aarch64]
    steps:
    - name: Set arch
      run: |
        if [[ $GHA_RUNSON == 'macos-13' ]];then
          echo "ARCH_TYPE=x86_64" >> $GITHUB_ENV
        else
          echo "ARCH_TYPE=aarch64" >> $GITHUB_ENV
        fi
      env:
        GHA_RUNSON: ${{matrix.os}}

    - name: Use Node.js
      uses: actions/setup-node@v4
      with:
        node-version: "lts/*"
    - uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name: Check Argument Compatibility
      shell: node {0}
      run: |
        if (
          process.env.GHA_profgen == "true"
          && process.env.GHA_profdata_jarlog_artifact_name == "true"
        ) {process.exit(-1); console.log("profgen and use-profdata is not compatible")}

      env:
        GHA_profgen: ${{inputs.profgen}}
        GHA_profdata_jarlog_artifact_name: ${{inputs.build-with-profdata-and-jarlog}}
        GHA_out-artifact-name: ${{inputs.out_artifact_name}}

    # - name: Change PPA mirror servers
    #   run: |
    #     sudo perl -p -i -e 's%(deb(?:-src|)\s+)https?://(?!archive\.canonical\.com|security\.ubuntu\.com)[^\s]+%$1http://archive.ubuntu.com/ubuntu/%' /etc/apt/sources.list
    #     sudo apt update
    #     echo "$GHA_aarch64"

    - uses: actions/checkout@v4
      name: Clone üß¨
      with:
        submodules: 'recursive'
        token: ${{ secrets.PAT }}

    # - name: Setup Disk & Swap Space üíø
    #   run: |
    #     chmod +x .github/workflows/src/disk_swap_for_github_runner.sh
    #     .github/workflows/src/disk_swap_for_github_runner.sh
    - name: Install system dependencies
      run: |
        brew update

        brew install ccache gnu-tar
        export PATH=/opt/homebrew/opt/ccache/libexec:$PATH
        export PATH=/usr/local/opt/gnu-tar/libexec/gnubin:$PATH
        #brew install sccache

        # completly uninstall python3 and python3.12
        brew uninstall --ignore-dependencies python3.12 -f

        export PATH="$(python3 -m site --user-base)/bin":$PATH

        rm '/usr/local/bin/2to3-3.11' # fix Could not symlink bin/2to3-3.11
        rm '/usr/local/bin/2to3-3.12' # fix Could not symlink bin/2to3-3.12
        rm /usr/local/bin/2to3 # fix Could not symlink bin/2to3
        rm '/usr/local/bin/idle3.11' #fix Could not symlink bin/idle3.11
        rm '/usr/local/bin/idle3.12' # fix Could not symlink bin/idle3.12
        rm '/usr/local/bin/idle3' # fix Could not symlink bin/idle3
        rm '/usr/local/bin/pydoc3.11' # fix Could not symlink bin/pydoc3.11
        rm '/usr/local/bin/pydoc3.12' # fix Could not symlink bin/pydoc3.12
        rm '/usr/local/bin/pydoc3' # fix Could not symlink bin/pydoc3
        rm '/usr/local/bin/python3.11' # fix Could not symlink bin/python3.11
        rm '/usr/local/bin/python3.12' # fix Could not symlink bin/python3.12
        rm '/usr/local/bin/python3' # fix Could not symlink bin/python3
        rm '/usr/local/bin/python3.11-config' # fix Could not symlink bin/python3.11-config
        rm '/usr/local/bin/python3.12-config' # fix Could not symlink bin/python3.12-config
        rm '/usr/local/bin/python3-config' # fix Could not symlink bin/python3-config

        curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y --default-toolchain 1.79

    # - name: Configure sccache
    #   uses: actions/github-script@v7
    #   with:
    #     script: |
    #       core.exportVariable('ACTIONS_CACHE_URL', process.env.ACTIONS_CACHE_URL || '');
    #       core.exportVariable('ACTIONS_RUNTIME_TOKEN', process.env.ACTIONS_RUNTIME_TOKEN || '');

    # - uses: actions/download-artifact@v4
    #   name: Download artifact if use profdataüì•
    #   if: inputs.build-with-profdata-and-jarlog
    #   with:
    #     name: ssb-${{ env.ARCH_TYPE }}-apple-darwin-profdata-and-jarlog
    #     path: ~/artifact

    # - name: Setup Cross Build tools ü™õ
    #   run: |
    #     wget -P /home/runner/cross-tools/ https://repo.ablaze.one/data/floorp/macos-cross-tools/macOS-cross-tools.7z
    #     7z x -y -p${{ secrets.MACOS_CROSS_TOOLS_KEY }} /home/runner/cross-tools/macOS-cross-tools.7z -o/home/runner/cross-tools/

    ## TODO: move mozconfig_darwin_pgo_base to src/macOS
    - name: Create config for "${{ env.ARCH_TYPE }}" üì¶
      run: |
        # sudo apt update
        # sudo apt upgrade -y

        cp ./.github/workflows/src/mac/shared/mozconfig_darwin_pgo_base mozconfig

        if [[ $ARCH_TYPE == 'x86_64' ]];then
          cat ./.github/workflows/src/mac/x86_64/x86_64-optimize-base >> mozconfig
        else
          cat ./.github/workflows/src/mac/aarch64/aarch64-optimize-base >> mozconfig
        fi

        echo 'mozconfig: **********************'
        cat ./mozconfig
        echo '*********************************'

        ./mach --no-interactive bootstrap --application-choice browser
        # sudo apt install -y p7zip-full zip tar
      # env:
      #   GHA_ARCH: ${{matrix.arch}}

    - name: Bootstrap ü•æ
      run: |

        if [[ -n $GHA_MOZ_BUILD_DATE ]];then
          export MOZ_BUILD_DATE=$GHA_MOZ_BUILD_DATE
        fi

        # if [[ $GHA_profgen == 'true' ]]; then
        #   echo 'ac_add_options --enable-profile-generate=cross' >> mozconfig
        # elif [[ $GHA_profdata_jarlog_artifact_name == 'true' ]]; then
        #   echo 'ac_add_options --enable-profile-use=cross' >> mozconfig
        #   echo 'ac_add_options --with-pgo-profile-path=$(echo ~)/artifact/merged.profdata' >> mozconfig
        #   echo 'ac_add_options --with-pgo-jarlog=$(echo ~)/artifact/en-US.log' >> mozconfig
        # fi

        # # SCCACHE START
        # echo "mk_add_options 'export RUSTC_WRAPPER=/home/runner/.mozbuild/sccache/sccache'" >> mozconfig
        # echo "mk_add_options 'export CCACHE_CPP2=yes'" >> mozconfig
        # echo "ac_add_options --with-ccache=/home/runner/.mozbuild/sccache/sccache" >> mozconfig
        # echo "mk_add_options 'export SCCACHE_GHA_ENABLED=on'" >> mozconfig
        # # SCCACHE END

        ./mach --no-interactive bootstrap --application-choice browser

        echo "DISPLAY_VERSION=$(cat ./browser/config/version_display.txt)" >> $GITHUB_ENV
        echo "INSIDE_VERSION=$(cat ./browser/config/version.txt)" >> $GITHUB_ENV
        echo "UPDATE_CHANNEL=release" >> $GITHUB_ENV
      env:
        # GHA_profgen: ${{inputs.profgen}}
        # GHA_profdata_jarlog_artifact_name : ${{inputs.build-with-profdata-and-jarlog}}
        GHA_MOZ_BUILD_DATE: ${{inputs.MOZ_BUILD_DATE}}

    # - name: setup Rust ü¶Ä
    #   run: |
    #     rustup toolchain install 1.79
    #     rustup default 1.79

    #     if [[ $ARCH_TYPE == 'x86_64' ]];then
    #       rustup target add x86_64-apple-darwin --toolchain 1.79
    #     else
    #       rustup target add aarch64-apple-darwin --toolchain 1.79
    #     fi

    #     #? https://github.com/mozilla/sccache#known-caveats
    #     export CARGO_INCREMENTAL=0
      # env:
      #   GHA_ARCH: ${{matrix.arch}}

    - name: Build üî®
      run: |
        if [[ -n $GHA_MOZ_BUILD_DATE ]];then
          export MOZ_BUILD_DATE=$GHA_MOZ_BUILD_DATE
        fi

        ./mach build
      env:
        GHA_MOZ_BUILD_DATE: ${{inputs.MOZ_BUILD_DATE}}

    - name: Retry Build if 1st build is failed üî®
      if: failure()
      run: |
        if [[ -n $GHA_MOZ_BUILD_DATE ]];then
          export MOZ_BUILD_DATE=$GHA_MOZ_BUILD_DATE
        fi

        ./mach build
      env:
        GHA_MOZ_BUILD_DATE: ${{inputs.MOZ_BUILD_DATE}}

    - name: Package üì¶
      run: |
        if [[ -n $GHA_MOZ_BUILD_DATE ]];then
          export MOZ_BUILD_DATE=$GHA_MOZ_BUILD_DATE
        fi
        ./mach package

      env:
        GHA_MOZ_BUILD_DATE: ${{inputs.MOZ_BUILD_DATE}}

    - name: Copy & Compress Artifacts üìÅ
      run: |
        mkdir ~/output
        if [[ $ARCH_TYPE == 'aarch64' ]];then
          arch="aarch64"
        else
          arch="x86_64"
        fi

        if [[ $GHA_profgen = 'true' ]];then
          tar zcvf ${arch}-apple-darwin-output.tar.xz ./obj-${arch}-apple-darwin/dist/ssb
          mv ${arch}-apple-darwin-output.tar.xz ~/output/
        else
          tar -czf ssb-${arch}-apple-darwin-with-pgo.tar.gz ./obj-${arch}-apple-darwin/dist/
          mv ssb-${arch}-apple-darwin-with-pgo.tar.gz ~/output/
        fi

      env:
        GHA_profgen: ${{inputs.profgen}}
        # GHA_ARCH: ${{matrix.arch}}

    # Publish START
    - name: make name of publish archive
      shell: node {0}
      run: |
        const fs = require('fs');
        let name = process.env.GHA_out_artifact_name ? process.env.GHA_out_artifact_name : process.env.GHA_default_name
        fs.appendFileSync(process.env.GITHUB_ENV, `ARTIFACT_NAME=${name}`);
      env:
        GHA_out_artifact_name : ${{inputs.out_artifact_name}}
        GHA_default_name: ssb-mac-${{ env.ARCH_TYPE }}-${{fromJson('["package","build-with-profgen"]')[inputs.profgen]}}

    - name: Publish PackageüéÅ
      uses: actions/upload-artifact@v4
      with:
        name: ${{env.ARTIFACT_NAME}}
        path: ~/output
    # Publish END
