# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at http://mozilla.org/MPL/2.0/.

# Please write our copyright if you use this file.
# © 2023 Floorp Projects & Contributors

#! SELF HOST DOES NOT SUPPORTED
#TODO: separate Publish to other workflow

on:
  workflow_call:
    inputs:
      out_artifact_name:
        type: string
        default: ""
      x86_64_artifact_name:
        type: string
        default: ""
      aarch64_artifact_name:
        type: string
        default: ""
      display_version:
        type: string
        default: ""
      MOZ_BUILD_DATE:
        type: string
        default: ""
    secrets:
        # macOS_CERTIFICATES_P12_For_App_BASE64:
        #     description: "macOS CERTIFICATES P12 For App BASE64"
        #     required: true
        # macOS_CERTIFICATES_P12_PASSWORD:
        #     description: "macOS CERTIFICATES P12 PASSWORD"
        #     required: true
        # macOS_AppleDeveloperId:
        #     description: "macOS AppleDeveloperId"
        #     required: true
        # macOS_AppleAccountId:
        #     description: "macOS AppleAccountId"
        #     required: true
        # macOS_AppleTeamId:
        #     description: "macOS AppleTeamId"
        #     required: true
        # macOS_AppleAccountAppSpecificPassword:
        #     description: "macOS AppleAccountAppSpecificPassword"
        #     required: true
        PAT:
            description: "Personal Access Token"
            required: true

  workflow_dispatch:
    inputs:
      out_artifact_name:
        type: string
        default: ""
      x86_64_artifact_url:
        type: string
        default: ""
      aarch64_artifact_url:
        type: string
        default: ""
      display_version:
        type: string
        default: ""
      MOZ_BUILD_DATE:
        type: string
        default: ""

jobs:
  Integration:
    runs-on: macos-latest
    steps:
        - name: Clone 📥
          uses: actions/checkout@v4
          with:
            submodules: 'recursive'
            token: ${{ secrets.PAT }}

        - name: download M1 build artifact 📥
          uses: actions/download-artifact@v4
          with:
            name: ${{ inputs.aarch64_artifact_name }}
            path: ./

        - name: download Intel build artifact 📥
          uses: actions/download-artifact@v4
          with:
            name: ${{ inputs.x86_64_artifact_name }}
            path: ./


        - name: Extract 📦
          run: |
            brew install gnu-tar
            export PATH=/usr/local/opt/gnu-tar/libexec/gnubin:$PATH
            tar -xf ./ssb-aarch64-apple-darwin-with-pgo.tar.gz
            tar -xf ./ssb-x86_64-apple-darwin-with-pgo.tar.gz

        - uses: actions/setup-python@v5
          with:
            python-version: '3.11' 

        - name: Create environment 🌲
          shell: bash
          run: |
            ./mach --no-interactive bootstrap --application-choice browser
            echo -e "ac_add_options --enable-bootstrap" >> mozconfig

            echo 'mozconfig: **********************'
            cat ./mozconfig
            echo '*********************************'

            echo 'folder structure: **********************'
            ls -l ./
            echo '*********************************'

            echo "****************************************************************************************************"
            echo "folder structure: x86_64-apple-darwin"
            ls -l ./obj-x86_64-apple-darwin/dist/
            echo "****************************************************************************************************"
            echo "folder structure: aarch64-apple-darwin"
            ls -l ./obj-aarch64-apple-darwin/dist/
            echo "****************************************************************************************************"

        - name: Integration 🗃
          run: |
            export APP_NAME="Nightly"

            ./mach python "./toolkit/mozapps/installer/unify.py" "./obj-x86_64-apple-darwin/dist/ssb/${APP_NAME}.app" "./obj-aarch64-apple-darwin/dist/ssb/${APP_NAME}.app"

        - name: Create DMG 📦
          run: |
            export APP_NAME="ssb"
            export INSTALLER_NAME="ssb"
            export DMG_FILE_NAME=${INSTALLER_NAME}-${{ inputs.display_version }}.macOS-universal.dmg

            ./mach python -m mozbuild.action.make_dmg ./obj-x86_64-apple-darwin/dist/ssb ${DMG_FILE_NAME}

            mkdir -p ./output
            mv ./${DMG_FILE_NAME} ./output/${DMG_FILE_NAME}

        - name: make name of publish archive
          shell: node {0}
          run: |
            const fs = require('fs');
            let name = process.env.GHA_out_artifact_name ? process.env.GHA_out_artifact_name : process.env.GHA_default_name
            fs.appendFileSync(process.env.GITHUB_ENV, `ARTIFACT_NAME=${name}`);
          env:
            GHA_out_artifact_name : ${{inputs.out_artifact_name}}
            GHA_default_name: Universal-Artifact

        - name: Publish 🎁
          uses: actions/upload-artifact@v4
          with:
            name: ${{ env.ARTIFACT_NAME }}
            if-no-files-found: ignore
            path: |
              ./output/
